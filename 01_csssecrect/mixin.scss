@charset "UTF-8";
/*差数学函数*/


/*波点图案*/
@mixin polka($size, $dot, $base, $accent) {
  background: $base;
  background-image: radial-gradient($accent $dot, transparent 0),
  radial-gradient($accent $dot, transparent 0);
  background-size: $size $size;
  background-position: 0 0, $size/2 $size/2;
}

.d1 {
  width: 200px;
  height: 150px;
  @include polka(30px, 30%, #655, tan);
}

/*棋盘图案*/
@mixin checkerboard($size, $base, $accent: rgba(0,0,0,.25)) {
  background: $base;
  background-image: linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 0),
  linear-gradient(45deg, $accent 25%, transparent 0, transparent 75%, $accent 0);
  background-position: 0 0, $size $size;
  background-size: 2*$size 2*$size;
}

.d2 {
  width: 240px;
  height: 180px;
  @include checkerboard(15px, #58a, tan);
}

/*切角效果*/
@mixin beveled-corners($bg, $tl:0, $tr:$tl, $br:$tl, $bl:$tr) {
  background: $bg;
  background: linear-gradient(135deg, transparent $tl, $bg 0) top left,
  linear-gradient(225deg, transparent $tr, $bg 0) top right,
  linear-gradient(-45deg, transparent $br, $bg 0) bottom right,
  linear-gradient(45deg, transparent $bl, $bg 0) bottom left;
  background-size: 50% 50%;
  background-repeat: no-repeat;
}

.d3 {
  width: 250px;
  height: 250px;
  @include beveled-corners(#58a, 15px, 5px);
}

/*折角*/
@mixin folded-corner($background, $size, $angle: 30deg) {
  position: relative;
  background: $background; /* Fallback */
  background: linear-gradient($angle - 180deg, transparent $size, $background 0);
  border-radius: .5em;

  $x: $size / sin($angle);
  $y: $size / cos($angle);

  &::before {
    content: '';
    position: absolute;
    top: 0; right: 0;
    background: linear-gradient(to left bottom, transparent 50%, rgba(0,0,0,.2) 0, rgba(0,0,0,.4)) 100% 0 no-repeat;
    width: $y;
    height: $x;
    transform: translateY($y - $x) rotate(2*$angle - 90deg);
    transform-origin: bottom right;
    border-bottom-left-radius: inherit;
    box-shadow: -.2em .2em .3em -.1em rgba(0,0,0,.15);
  }

}

/*@mixin folded-corner($background, $size,
$angle: 30deg) {
  position: relative;
  background: $background; !* 回退样式 *!
  background: linear-gradient($angle - 180deg, transparent $size, $background 0);
  border-radius: .5em;
  $x: $size / sin($angle);
  $y: $size / cos($angle);
  &::before {
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    background: linear-gradient(to left bottom, transparent 50%, rgba(0, 0, 0, .2) 0, rgba(0, 0, 0, .4)) 100% 0 no-repeat;
    width: $y;
    height: $x;
    transform: translateY($y - $x) rotate(2*$angle - 90deg);
    transform-origin: bottom right;
    border-bottom-left-radius: inherit;
    box-shadow: -.2em .2em .3em -.1em rgba(0, 0, 0, .2);
  }
}*/
body {
  /* Showcase that the effect supports any backdrop */
  background: repeating-linear-gradient(-45deg, #ddd 0, #ddd 25%, white 0, white 50%) 0 / 6px 6px;
  box-sizing: border-box;
  padding: 1em;
  height: 100vh;
}
.note {
  width: 30em;
  height: 20em;
  position: relative;
  display: inline-block;
  vertical-align: top;
  padding: 2em;
  margin: 0 1rem;
  color: white;
  font: 100%/1.6 Baskerville, Palatino, serif;
  border-radius: .5em;
  @include folded-corner(#58a, 1.5em, 25deg);
}

/*文字3d*/
@mixin text-3d($color: white, $depth: 5) {
  $shadows: ();
  $shadow-color: $color;
  @for $i from 1 through $depth {
    $shadow-color: darken($shadow-color, 10%);
    $shadows: append($shadows,
            0 ($i * 1px) $shadow-color, comma);
  }
  color: $color;
  text-shadow: append($shadows,
          0 ($depth * 1px) 10px black, comma);
}

h1 {
  background-color: #58a;
  padding: 10px;
  @include text-3d(#eee, 4);
}

@function text-retro($color: black, $depth: 8) {
  $shadows: (1px 1px $color,);
  @for $i from 2 through $depth {
    $shadows: append($shadows,
                    ($i*1px) ($i*1px) $color, comma);
  }
  @return $shadows;
}
h2 {
  padding: 10px;
  color: white;
  background: hsl(0,50%,45%);
  text-shadow: text-retro();
}